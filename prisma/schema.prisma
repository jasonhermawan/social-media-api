// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  uuid       String
  email      String
  username   String
  password   String
  picture    String?
  isVerified Boolean
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Post       Post[]
  Comment    Comment[]
  PostLike   PostLike[]
  PostSave   PostSave[]

  @@map("users")
}

model Post {
  id        Int        @id @default(autoincrement())
  uuid      String
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  caption   String?
  picture   String?
  deletedAt DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Comment   Comment[]
  PostLike  PostLike[]
  PostSave  PostSave[]

  @@map("posts")
}

model Comment {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  post      Post      @relation(fields: [postId], references: [id])
  postId    Int
  caption   String?
  picture   String?
  deletedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("comments")
}

model PostLike {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("post_likes")
}

model PostSave {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("post_saves")
}
